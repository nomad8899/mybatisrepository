<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ohgiraffers.section01.xmlmapper.ElementTestMapper">

    <cache eviction="LRU" flushInterval="1000" size="512" readOnly="true"/>

    <select id="selectCacheTest" resultType="java.lang.String">
        SELECT MENU_NAME
        FROM TBL_MENU A
    </select>

    <!-- <resultMap> 엘리먼트 -->

    <resultMap id="menuResultMap1" type="com.ohgiraffers.common.MenuDTO" autoMapping="false">
        <id property="code" column="MENU_CODE"/>
        <result property="name" column="MENU_NAME"/>
        <result property="price" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
    </resultMap>

    <resultMap id="menuResultMap2" type="com.ohgiraffers.common.MenuDTO" extends="menuResultMap1">
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
    </resultMap>

    <select id="selectResultMapTest" resultMap="menuResultMap2">
        SELECT A.MENU_CODE
                , A.MENU_NAME
                , A.MENU_PRICE
                , A.CATEGORY_CODE
                , A.ORDERABLE_STATUS
        FROM    TBL_MENU A
        WHERE   A.ORDERABLE_STATUS = 'Y'
    </select>

    <!-- <resultMap>의 하위 엘리먼트
                    <id> : primary key 컬럼을 매핑하기 위한 태그이다.
                    <result> : pk가 아닌 일반 컬럼에 매핑하기 위한 태그이다.
                    <constructor> : 인스턴스화 되는 클래스의 생성자에 결과를 삽입하기 위해 사용한다.
                                    <idArg>, <arg> 하위 엘리먼트가 있다.
                    <association> : 복잡한 타입의 연관 관계로 1:1 포함관계인 경우 사용한다.
                    <collection> : 복잡한 타입의 연관 관계로 1:다 포함관계인 경우 사용한다.
                    <discriminator> : 조건에 따라 다른 resultMap이 매핑되도록한다.
                    -->

    <resultMap id="menuResultMap3" type="com.ohgiraffers.common.MenuDTO">
        <!-- id, result 엘리먼트는 setter를 이용하기 때문에 property에 필드명을 지정했다.
            생성자를 사용하는 경우 순서와 타입을 맞춰서 기재해야 한다.-->
        <constructor>
            <idArg column="MENU_CODE" javaType="_int"/>
            <arg column="MENU_NAME" javaType="string"/>
            <arg column="MENU_PRICE" javaType="_int"/>
            <arg column="CATEGORY_CODE" javaType="_int"/>
            <arg column="ORDERABLE_STATUS" javaType="string"/>
        </constructor>
    </resultMap>
    <select id="selectResultMapConstructorTest" resultMap="menuResultMap3">
        SELECT A.MENU_CODE
             , A.MENU_NAME
             , A.MENU_PRICE
             , A.CATEGORY_CODE
             , A.ORDERABLE_STATUS
        FROM    TBL_MENU A
        WHERE   A.ORDERABLE_STATUS = 'Y'
    </select>

<!--    <resultMap id="menuAndCategoryResultMap" type="com.ohgiraffers.common.MenuAndCategoryDTO">-->
<!--        <id property="code" column="MENU_CODE"/>-->
<!--        <result property="name" column="MENU_NAME"/>-->
<!--        <result property="price" column="MENU_PRICE"/>-->
<!--        <result property="orderableStatus" column="ORDERABLE_STATUS"/>-->
<!--        <association property="category" resultMap="categoryResultMap"/>-->
<!--    </resultMap>-->
<!--    -->
<!--    <resultMap id="categoryResultMap" type="com.ohgiraffers.common.CategoryDTO">-->
<!--        <id property="code" column="CATEGORY_CODE"/>-->
<!--        <result property="name" column="CATEGORY_NAME"/>-->
<!--        <result property="refCategoryCode" column="REF_CATEGORY_CODE"/>-->
<!--    </resultMap>-->

    <resultMap id="menuAndCategoryResultMap" type="com.ohgiraffers.common.MenuAndCategoryDTO">
        <id property="code" column="MENU_CODE"/>
        <result property="name" column="MENU_NAME"/>
        <result property="price" column="MENU_PRICE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
        <association property="category" javaType="com.ohgiraffers.common.CategoryDTO">
            <id property="code" column="CATEGORY_CODE"/>
            <result property="name" column="CATEGORY_NAME"/>
            <result property="refCategoryCode" column="REF_CATEGORY_CODE"/>
        </association>
    </resultMap>

    <resultMap id="categoryResultMap" type="com.ohgiraffers.common.CategoryDTO">
        <id property="code" column="CATEGORY_CODE"/>
        <result property="name" column="CATEGORY_NAME"/>
        <result property="refCategoryCode" column="REF_CATEGORY_CODE"/>
    </resultMap>

    <select id="selectResultMapAssociationTest" resultMap="menuAndCategoryResultMap">
        SELECT A.MENU_CODE
                , A.MENU_NAME
                , A.MENU_PRICE
                , B.CATEGORY_CODE
                , B.CATEGORY_NAME
                , B.REF_CATEGORY_CODE
                , A.ORDERABLE_STATUS
        FROM TBL_MENU A
                    JOIN TBL_CATEGORY B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
        WHERE A.ORDERABLE_STATUS = 'Y'
    </select>

    <!-- association, collection은 id, result 아래에 작성해야 오류가 발생하지 않는다. -->

    <!-- 따로 만든 resultMap 사용 -->
<!--    <resultMap id="categoryAndMenuResultMap" type="com.ohgiraffers.common.CategoryAndMenuDTO">-->
<!--        <id property="code" column="CATEGORY_CODE"/>-->
<!--        <result property="name" column="CATEGORY_NAME"/>-->
<!--        <result property="refCategoryCode" column="REF_CATEGORY_CODE"/>-->
<!--        <collection property="menuList" resultMap="menuResultMap"/>-->
<!--    </resultMap>-->
<!--    -->
<!--    <resultMap id="menuResultMap" type="com.ohgiraffers.common.MenuDTO">-->
<!--        <id property="code" column="MENU_CODE"/>-->
<!--        <result property="name" column="MENU_NAME"/>-->
<!--        <result property="price" column="MENU_PRICE"/>-->
<!--        <result property="categoryCode" column="CATEGORY_CODE"/>-->
<!--        <result property="orderableStatus" column="ORDERABLE_STATUS"/>-->
<!--    </resultMap>-->

    <!-- collection 내에 id, result 작성하는 방법 -->
    <resultMap id="categoryAndMenuResultMap" type="com.ohgiraffers.common.CategoryAndMenuDTO">
        <id property="code" column="CATEGORY_CODE"/>
        <result property="name" column="CATEGORY_NAME"/>
        <result property="refCategoryCode" column="REF_CATEGORY_CODE"/>
        <collection property="menuList" ofType="com.ohgiraffers.common.MenuDTO">
            <id property="code" column="MENU_CODE"/>
            <result property="name" column="MENU_NAME"/>
            <result property="price" column="MENU_PRICE"/>
            <result property="categoryCode" column="CATEGORY_CODE"/>
            <result property="orderableStatus" column="ORDERABLE_STATUS"/>
        </collection>
    </resultMap>

    <select id="selectResultMapCollectionTest" resultMap="categoryAndMenuResultMap">
        SELECT A.CATEGORY_CODE
            , A.CATEGORY_NAME
            , A.REF_CATEGORY_CODE
            , B.MENU_CODE
            , B.MENU_NAME
            , B.MENU_PRICE
            , B.CATEGORY_CODE
            , B.ORDERABLE_STATUS
        FROM TBL_CATEGORY A
                LEFT JOIN TBL_MENU B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
        ORDER BY A.CATEGORY_CODE
    </select>

    <!-- <sql> 엘리먼트
        각 매핑 구문에서 공통으로 사용할 수 있는 SQL 문자열의 일부를 정의하고 재사용할 수 있다.
        -->

    <sql id="columns">
          MENU_CODE
        , MENU_NAME
        , MENU_PRICE
        , CATEGORY_CODE
        , ORDERABLE_STATUS
    </sql>

    <select id="selectSqlTest" resultMap="menuResultMap2">
        SELECT
        <include refid="columns"/>
        FROM TBL_MENU
        WHERE ORDERABLE_STATUS = 'Y'
    </select>

    <!-- <insert> 엘리먼트
     insert, update, delete 엘리먼트는 사용하는 속성이 대부분 동일하-->

    <insert id="insertNewCategory">
        INSERT INTO
            TBL_CATEGORY (
                          CATEGORY_NAME
        )
        VALUES (
                    #{ category.name }
               )
    </insert>

    <insert id="insertNewMenu">
        <selectKey keyProperty="category.code" order="BEFORE" resultType="_int">
            SELECT AUTO_INCREMENT-1
            FROM INFORMATION_SCHEMA.TABLES
            WHERE TABLE_SCHEMA = 'menudb'
            AND TABLE_NAME = 'tbl_category'
        </selectKey>
            INSERT INTO TBL_MENU (
                                  MENU_NAME
                                , MENU_PRICE
                                , CATEGORY_CODE
                                , ORDERABLE_STATUS
                                 )
            VALUES (
                      #{ name }
                    , #{ price }
                    , #{ category.code }
                    , #{ orderableStatus}
                    )
    </insert>

</mapper>